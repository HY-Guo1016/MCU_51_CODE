C51 COMPILER V9.60.0.0   DISPLAY                                                           04/16/2023 00:43:19 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE DISPLAY
OBJECT MODULE PLACED IN ..\Output\display.obj
COMPILER INVOKED BY: d:\Keil_v5\C51\BIN\C51.EXE ..\Source\display.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(..
                    -\Listings\display.lst) OBJECT(..\Output\display.obj)

line level    source

   1          #include "display.h"
   2          unsigned char code LED_DATA[] = 
   3                                                                          {
   4                                                                                  0xc0, //0
   5                                                                                  0xf9, //1
   6                                                                                  0xa4, //2
   7                                                                                  0xb0, //3
   8                                                                                  0x99, //4
   9                                                                                  0x92, //5
  10                                                                                  0x82, //6
  11                                                                                  0xf8, //7
  12                                                                                  0x80, //8
  13                                                                                  0x90, //9
  14                                                                                  0x88, //A
  15                                                                                  0x83, //b
  16                                                                                  0xc6, //C
  17                                                                                  0xa1, //d
  18                                                                                  0x86, //E
  19                                                                                  0x8e, //F
  20                                                                                  0xFF,
  21                                                                                  0xBF
  22                                                                          };
  23                                                                          
  24          unsigned char code LED_Place[] = {0x80,0x40,0x20,0x10,0x08,0x04,0x02,0x01};
  25          
  26          unsigned char LEDBUF[] = {16,16,16,16,16,16,16,16};
  27          
  28          void display()
  29          {
  30   1              static unsigned char i = 0;
  31   1              switch(i)
  32   1              {
  33   2                      case 0:
  34   2                              P0 = 0xFF;
  35   2                              P2 = (P2&0x1F)|0xE0;
  36   2                              P2 = P2&0x1F;
  37   2                      
  38   2                              P0 = LED_Place[i];
  39   2                              P2 = (P2&0x1F)|0xC0;
  40   2                              P2 = P2&0x1F;
  41   2                      
  42   2                              P0 = LED_DATA[LEDBUF[i]];
  43   2                              P2 = (P2&0x1F)|0xE0;
  44   2                              P2 = P2&0x1F;
  45   2                              i++;
  46   2                              break;
  47   2                      case 1:
  48   2                              P0 = 0xFF;
  49   2                              P2 = (P2&0x1F)|0xE0;
  50   2                              P2 = P2&0x1F;
  51   2                              P0 = LED_Place[i];
  52   2                              P2 = (P2&0x1F)|0xC0;
  53   2                              P2 = P2&0x1F;
  54   2                              P0 = LED_DATA[LEDBUF[i]];
C51 COMPILER V9.60.0.0   DISPLAY                                                           04/16/2023 00:43:19 PAGE 2   

  55   2                              P2 = (P2&0x1F)|0xE0;
  56   2                              P2 = P2&0x1F;
  57   2                              i++;
  58   2                              break;
  59   2                      case 2:
  60   2                              P0 = 0xFF;
  61   2                              P2 = (P2&0x1F)|0xE0;
  62   2                              P2 = P2&0x1F;
  63   2                              P0 = LED_Place[i];
  64   2                              P2 = (P2&0x1F)|0xC0;
  65   2                              P2 = P2&0x1F;
  66   2                              P0 = LED_DATA[LEDBUF[i]];
  67   2                              P2 = (P2&0x1F)|0xE0;
  68   2                              P2 = P2&0x1F;
  69   2                              i++;
  70   2                              break;
  71   2                      case 3:
  72   2                              P0 = 0xFF;
  73   2                              P2 = (P2&0x1F)|0xE0;
  74   2                              P2 = P2&0x1F;
  75   2                              P0 = LED_Place[i];
  76   2                              P2 = (P2&0x1F)|0xC0;
  77   2                              P2 = P2&0x1F;
  78   2                              P0 = LED_DATA[LEDBUF[i]];
  79   2                              P2 = (P2&0x1F)|0xE0;
  80   2                              P2 = P2&0x1F;
  81   2                              i++;
  82   2                              break;
  83   2                      case 4:
  84   2                              P0 = 0xFF;
  85   2                              P2 = (P2&0x1F)|0xE0;
  86   2                              P2 = P2&0x1F;
  87   2                              P0 = LED_Place[i];
  88   2                              P2 = (P2&0x1F)|0xC0;
  89   2                              P2 = P2&0x1F;
  90   2                              P0 = LED_DATA[LEDBUF[i]];
  91   2                              P2 = (P2&0x1F)|0xE0;
  92   2                              P2 = P2&0x1F;
  93   2                              i++;
  94   2                              break;
  95   2                      case 5:
  96   2                              P0 = 0xFF;
  97   2                              P2 = (P2&0x1F)|0xE0;
  98   2                              P2 = P2&0x1F;
  99   2                              P0 = LED_Place[i];
 100   2                              P2 = (P2&0x1F)|0xC0;
 101   2                              P2 = P2&0x1F;
 102   2                              P0 = LED_DATA[LEDBUF[i]];
 103   2                              P2 = (P2&0x1F)|0xE0;
 104   2                              P2 = P2&0x1F;
 105   2                              i++;
 106   2                              break;
 107   2                      case 6:
 108   2                              P0 = 0xFF;
 109   2                              P2 = (P2&0x1F)|0xE0;
 110   2                              P2 = P2&0x1F;
 111   2                              P0 = LED_Place[i];
 112   2                              P2 = (P2&0x1F)|0xC0;
 113   2                              P2 = P2&0x1F;
 114   2                              P0 = LED_DATA[LEDBUF[i]];
 115   2                              P2 = (P2&0x1F)|0xE0;
 116   2                              P2 = P2&0x1F;
C51 COMPILER V9.60.0.0   DISPLAY                                                           04/16/2023 00:43:19 PAGE 3   

 117   2                              i++;
 118   2                              break;
 119   2                      case 7:
 120   2                              P0 = 0xFF;
 121   2                              P2 = (P2&0x1F)|0xE0;
 122   2                              P2 = P2&0x1F;
 123   2                              P0 = LED_Place[i];
 124   2                              P2 = (P2&0x1F)|0xC0;
 125   2                              P2 = P2&0x1F;
 126   2                              P0 = LED_DATA[LEDBUF[i]];
 127   2                              P2 = (P2&0x1F)|0xE0;
 128   2                              P2 = P2&0x1F;
 129   2                              i = 0;
 130   2                              break;
 131   2                      default:break;
 132   2              }
 133   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    162    ----
   CONSTANT SIZE    =     26    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      9    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
